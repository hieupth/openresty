# ------------------------------------------------------
# Logging settings
# ------------------------------------------------------
# Main access logs
access_log /var/log/nginx/access.log;
access_log /dev/stdout;
# Error logs  
error_log /var/log/nginx/error.log;
error_log /dev/stderr;

# ------------------------------------------------------
# Performance settings
# ------------------------------------------------------
# Enable sendfile for static file serving
sendfile on;
# Optimize sendfile for large files
tcp_nopush on;
tcp_nodelay on;
# Keepalive settings
keepalive_timeout 65;
types_hash_max_size 1024;

# ------------------------------------------------------
# Websocket settings
# ------------------------------------------------------
# If Upgrade is defined, Connection = upgrade. If Upgrade is empty, Connection = close
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

# ------------------------------------------------------
# Gzip settings
# ------------------------------------------------------
# Enable gzip for better performance and lower bandwidth.
gzip on;
gzip_comp_level    6;
gzip_min_length    256;
gzip_proxied       any;
gzip_vary          on;
# Zip almost static file types.
gzip_types
  application/atom+xml
  application/javascript
  application/json
  application/ld+json
  application/manifest+json
  application/rss+xml
  application/vnd.geo+json
  application/vnd.ms-fontobject
  application/x-font-ttf
  application/x-web-app-manifest+json
  application/xhtml+xml
  application/xml
  font/opentype
  image/bmp
  image/svg+xml
  image/x-icon
  text/cache-manifest
  text/css
  text/plain
  text/vcard
  text/vnd.rim.location.xloc
  text/vtt
  text/x-component
  text/x-cross-domain-policy;

# ------------------------------------------------------
# TLS settings
# ------------------------------------------------------
# HSTS for HTTPS (uncomment when using SSL)
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
# Enable TLS to prevent Heartbleed.
ssl_protocols TLSv1.2 TLSv1.3;
# Enable TLS cache to reduce handshake time.
ssl_session_cache shared:SSL:5m;
ssl_session_timeout 20m;
ssl_session_tickets off;
# Enable HSTS to enforce HTTPS redirect at browser to eliminates HTTPS redirect time.
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
# Enable strong TLS encryption ciphers.
ssl_prefer_server_ciphers on;
ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
# Enable OCSP
ssl_stapling on;
ssl_stapling_verify on;
# Enable DNS resolver.
resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 valid=60s;
resolver_timeout 5s;

# ------------------------------------------------------
# Security settings
# ------------------------------------------------------
# Hide nginx version to prevent sniffing.
server_tokens off;
# Disable ETags to prevent inode attack.
etag off;
# Prevent XSS attack.
add_header X-XSS-Protection "1; mode=block" always;
# Prevent MIME sniffing.
add_header X-Content-Type-Options "nosniff" always;
# Prevent Click-jacking attack.
add_header X-Frame-Options "DENY" always;
# More XSS protection by enable CSP.
add_header Content-Security-Policy "
  default-src 'self'; 
  script-src 'self' 'unsafe-inline';
  style-src 'self' 'unsafe-inline';
  mg-src 'self' data: https:;
  font-src 'self';
  connect-src 'self';
  frame-ancestors 'none';
" always;

# ------------------------------------------------------
# Proxy settings.
# ------------------------------------------------------
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header Host $host;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_ssl_server_name on;
# websocket headers
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $connection_upgrade;
proxy_set_header X-Scheme $scheme;
proxy_buffering off;